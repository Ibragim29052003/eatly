import AbstractSwitchable from './AbstractSwitchable.js'

/**
 * –ö–û–ú–ü–û–ù–ï–ù–¢ –¢–ê–ë–û–í –ü–ï–†–ò–û–î–û–í
 * –£–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–∞–±–∞–º–∏ (Main/Weekly/Monthly/Yearly)
 */
class PeriodTabs extends AbstractSwitchable {
  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Ç–∞–±–∞
   */
  updateElementState(element, isActive) {
    element.classList.toggle(this.stateClasses.isActive, isActive)
    element.setAttribute(this.stateAttributes.ariaSelected, isActive)
    element.setAttribute(this.stateAttributes.tabIndex, isActive ? '0' : '-1')
  }

  /**
   * –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
   */
  bindEvents() {
    this.elements.forEach((element, index) => {
      // –ö–ª–∏–∫ –º—ã—à—å—é
      element.addEventListener('click', () => this.activate(index))

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ–∫—É—Å–∞ (–¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ activeIndex)
      element.addEventListener('focus', () => {
        const focusedIndex = [...this.elements].indexOf(element)
        if (focusedIndex !== -1 && focusedIndex !== this.state.activeIndex) {
          this.activate(focusedIndex)
        }
      })
    })

    // –ù–∞–≤–∏–≥–∞—Ü–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    this.bindKeyboardNavigation()
  }
}

/**
 * –ö–û–ú–ü–û–ù–ï–ù–¢ RANGE-–≠–õ–ï–ú–ï–ù–¢–û–í
 * –£–ø—Ä–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ (2D/4D/5D/6D/7D)
 */
class DetailRange extends AbstractSwitchable {
  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
   */
  updateElementState(element, isActive) {
    element.classList.toggle(this.stateClasses.isActive, isActive)
    element.setAttribute(this.stateAttributes.ariaChecked, isActive)

    const span = element.querySelector('span')
    if (span) {
      span.setAttribute(this.stateAttributes.ariaHidden, !isActive)
    }
  }

  /**
   * –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
   */
  bindEvents() {
    this.elements.forEach((element, index) => {
      // –ö–ª–∏–∫ –º—ã—à—å—é
      element.addEventListener('click', () => this.activate(index))

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ–∫—É—Å–∞
      element.addEventListener('focus', () => {
        const focusedIndex = [...this.elements].indexOf(element)
        if (focusedIndex !== -1 && focusedIndex !== this.state.activeIndex) {
          this.activate(focusedIndex)
        }
      })
    })

    // –ù–∞–≤–∏–≥–∞—Ü–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    this.bindKeyboardNavigation()
  }
}

/**
 * –ì–õ–ê–í–ù–´–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –ì–†–ê–§–ò–ö–ê
 * –ö–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –º–µ–∂–¥—É:
 * - –¢–∞–±–∞–º–∏ –ø–µ—Ä–∏–æ–¥–æ–≤
 * - Range-—ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
 * - –ì—Ä–∞—Ñ–∏–∫–æ–º –¥–∞–Ω–Ω—ã—Ö
 */
export default class FinancialChart {
  constructor() {
    this.container = document.querySelector('.hero__chart-activity')
    if (!this.container) {
      console.warn('FinancialChart: Container not found')
      return
    }

    this.initComponents()
    this.setupInteractions()
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–æ—á–µ—Ä–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
   */
  initComponents() {
    // –¢–∞–±—ã –ø–µ—Ä–∏–æ–¥–æ–≤
    this.periodTabs = new PeriodTabs(
      this.container.querySelectorAll('[data-js-tabs-button]'),
      [...this.container.querySelectorAll('[data-js-tabs-button]')]
        .findIndex(el => el.classList.contains('is-active'))
    )

    // Range-—ç–ª–µ–º–µ–Ω—Ç—ã
    this.detailRange = new DetailRange(
      this.container.querySelectorAll('[data-js-range-item]'),
      [...this.container.querySelectorAll('[data-js-range-item]')]
        .findIndex(el => el.classList.contains('is-active'))
    )

    this.periodTabs.bindEvents()
    this.detailRange.bindEvents()
  }

  /**
   * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
   */
  setupInteractions() {
    // –ü—Ä–∏ —Å–º–µ–Ω–µ –ø–µ—Ä–∏–æ–¥–∞ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é
    this.periodTabs.on('change', () => {
      this.detailRange.activate(0)
      this.loadData()
    })

    // –ü—Ä–∏ —Å–º–µ–Ω–µ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    this.detailRange.on('change', this.loadData.bind(this))
  }

  /**
   * –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
   */
  loadData() {
    const period = this.periodTabs.getActiveValue()
    const detail = this.detailRange.getActiveValue()

    console.log(`–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö: –ü–µ—Ä–∏–æ–¥=${period}, –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è=${detail}`)
    // –†–µ–∞–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è:
    // –ß—Ç–æ - —Ç–æ —Ç–∞–º... –û–ö–ê–öüòÇ
  }
}